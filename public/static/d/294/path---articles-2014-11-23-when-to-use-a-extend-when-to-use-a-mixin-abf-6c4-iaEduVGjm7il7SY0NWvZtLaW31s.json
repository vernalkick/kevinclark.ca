{"data":{"markdownRemark":{"html":"<p>Harry Roberts wrote <a href=\"http://csswizardry.com/2014/11/when-to-use-extend-when-to-use-a-mixin/\">a great post on CSS Wizardry</a> about the distinction between <code>@extend</code> and <code>@mixin</code>:</p>\n<blockquote>\n<p>Only use @extend when the rulesets that you are trying to DRY out are inherently and thematically related. Do not force relationships that do not exist: to do so will create unusual groupings in your project, as well as negatively impacting the source order of your code.</p>\n</blockquote>\n<blockquote>\n<p>Use a mixin to either inject dynamic values into repeated constructs, or as a Sassy copy/paste which allows you to repeat the same group of declarations throughout your project whilst keeping a Single Source of Truth.</p>\n</blockquote>\n<p>I completely agree with it. In real life, that means I almost never use <code>@extend</code>s. If you have a lot of elements that share the same styles for a reason, you should probably make it a class on its own.</p>","frontmatter":{"pretitle":null,"title":"When to Use a Extend / When to Use a Mixin","date":"23.11.14"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/articles/2014-11-23-when-to-use-a-extend-when-to-use-a-mixin/"}}