{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"I Gave up on RSS\",\n  \"date\": \"2015-07-15T00:00:00.000Z\",\n  \"published\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"As I\\u2019m typing this, I currently have 243 unread items sitting in my RSS app. It was too much. It\\u2019s hard to pinpoint a specific time when it went from a good way to stay on top of news to feeling like a burden, but I feel like I spend way more time managing it than simply reading lately.\"), mdx(\"h2\", null, \"Stream vs Inbox\"), mdx(\"p\", null, \"I think one of the biggest problems with RSS is that it was built following the inbox model. New items are added to your inbox over time and must be manually marked as read to be cleared, just like email. The inbox model is great for things you don\\u2019t want to miss, or when there is a very low volume of content. The problem here is that we have way more content sources than ever before.\"), mdx(\"p\", null, \"In that case, the stream approach works way better. The stream just flows whether you\\u2019re looking at it or not and surfaces the most relevant information at the moment (usually based on time or your social graph). That means you can sometimes miss things, but you don\\u2019t have to manage anything. There\\u2019s no anxiety that builds up over time.\"), mdx(\"p\", null, \"That\\u2019s something to think about when you\\u2019re designing apps or service. Is it an inbox or is it a stream? Both can be appropriate depending on what you\\u2019re designing, but they have a huge impact on the rest of the decisions you make after that.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"pretitle":null,"title":"I Gave up on RSS","date":"15.07.15"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/articles/2015-07-15-i-gave-up-on-rss/"}}